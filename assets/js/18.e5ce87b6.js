(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{368:function(t,e,s){t.exports=s.p+"assets/img/header-img.f3536fac.png"},451:function(t,e,s){"use strict";s.r(e);var r=s(25),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"浏览器渲染页面过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染页面过程"}},[t._v("#")]),t._v(" 浏览器渲染页面过程")]),t._v(" "),r("ul",[r("li",[t._v("请求服务器HTML文件，并解析HTML文件")]),t._v(" "),r("li",[t._v("解析HTML文件构建DOM树，构建DOM树的过程中，遇到 "),r("code",[t._v("link")]),t._v(" 标签，去请求CSS文件")]),t._v(" "),r("li",[t._v("继续解析，遇到 "),r("code",[t._v("script")]),t._v(" 时，去请求JS文件，如果是同步请求JS文件或行内JS则会阻塞渲染，异步请求JS文件则会并行请求JS文件后执行（"),r("strong",[t._v("async")]),t._v(" 属性。立即请求文件，但不阻塞渲染引擎，而是文件加载完毕后阻塞渲染引擎并立即执行文件内容；"),r("strong",[t._v("defer")]),t._v(" 属性。立即请求文件，但不阻塞渲染引擎，等到解析完 HTML 之后再执行文件内容）")]),t._v(" "),r("li",[t._v("当DOM构建完以后，则需要根据请求到的CSS文件来构建CSSOM（DOM和CSSOM一起构建渲染树），JS文件内容必须等CSSOM构建完以后才能执行，由于JS可以操作DOM和CSS，所以，执行完JS以后又回重新构建渲染树和布局、绘制等")])]),t._v(" "),r("p",[r("br"),r("img",{attrs:{src:s(368),alt:"image.png"}}),r("br")])])}),[],!1,null,null,null);e.default=n.exports}}]);